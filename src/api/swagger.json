{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "User Service",
        "description": "CuWell"
    },
    "servers": [
        {
            "url": "https://cuwell-authentication.herokuapp.com/api",
            "description": "User Service"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "API for auth in the system"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "components": {
     "securitySchemes": {
         "Bearer": {
            "description": "",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
         }
     }
   },
    "security": [   
        {
          "Bearer": [

          ]
        }
      ],

    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login to system",
                "requestBody": {
                    "description": "Login Data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/loginData"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "statusCode": "200",
                        "description": "OK",
                        "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/loginResult"
                            }
                        }
                    }
                    },
                    "400": {
                        "statusCode": "400",
                        "description": "Invalid email or password"
                    },
                    "500": {
                        "statusCode": "500",
                        "description": "Server Errors"
                    }
                }
            }
        },
        "/auth/":{
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Create User",
                "requestBody": {
                    "description": "New User Data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/newUserData"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "statusCode": "200",
                        "description": "OK",
                        "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/newUserResult"
                            }
                        }
                    }
                    },
                     "400": {
                        "statusCode": "400",
                        "description": "Bad Request"
                    },
                    "409": {
                        "statusCode": "409",
                        "description": "Conflict Result"
                    },

                    "500": {
                        "statusCode": "500",
                        "description": "Server Errors"
                    }
                }
            }
        }, 
        "/auth/forgot-password":{
            "patch": {
                "tags": [
                    "Auth"
                ],
                "summary": "Forgot password",
                "requestBody": {
                    "description": "Forgot password Data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/forgotPassword"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "statusCode": "200",
                        "description": "No Content Result"
                        
                    },
                     "400": {
                        "statusCode": "400",
                        "description": "Bad Request"
                    },  
                    "500": {
                        "statusCode": "500",
                        "description": "Server Errors"
                    }
                } }
        },    
        "/users/password":{
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Change password",
                "requestBody": {
                    "description": "Change password Data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/changePassword"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "statusCode": "204",
                        "description": "No Content Result"  
                    },
                    "400": {
                        "statusCode": "400",
                        "description": "Bad Request"
                    },
                    "500": {
                        "statusCode": "500",
                        "description": "Server Errors"
                    }
                }
            }
        },    
        "/users/{userId}": {
            "parameters": [
                {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "description": "userId you want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get User with userId",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "description": "User with userId",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/userDetailsResult"
                            }
                        }
                    }
                    },
                    "400": {
                        "statusCode": "400",
                        "description": "Bad Request"
                    },
                    "404": {
                        "statusCode": "404",
                        "description": "User not found"
                    },
                    "500": {
                        "statusCode": "500",
                        "description": "Server errors"
                    }
                }
            },
            "patch": {
                "summary": "Update User with userId",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "description": "User Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/updateUserData"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true
                        
                    }
                    
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/userDetailsResult"
                            }
                        }
                    }
                    },
                    "400": {
                        "statusCode": "400",
                        "description": "Bad Request"
                    },
                    "404": {
                        "statusCode": "404",
                        "description": "User not found"
                    },
                    "500": {
                        "statusCode": "500",
                        "description": "Server errors"
                    }
                }
            }
        },
         "/users":{
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users in system",
                "responses": {
                  "200": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Users"
                            }
                        }
                    }
                  },
                  "400": {
                        "statusCode": "400",
                        "description": "Bad Request"
                    },
                    "500": {
                        "statusCode": "500",
                        "description": "Server Errors"
                    }
              }
          
            }
        },
        "/users/status":{
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update status of User",
                "requestBody": {
                    "description": "User status",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/userStatus"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "statusCode": "204",
                        "description": "No Content"
                        
                    },
                    "500": {
                        "statusCode": "500",
                        "description": "Server Errors"
                    }
                }
            }
        },
        "/ratings":{
            "patch": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Update rating of User",
                "requestBody": {
                    "description": "User rating",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/userRating"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "statusCode": "204",
                        "description": "No Content"                     
                    },
                    "404": {
                        "statusCode": "404",
                        "description": "User not found"
                    },
                    "500": {
                        "statusCode": "500",
                        "description": "Server Errors"
                    }
                }
            },
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get rating of User",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "description": ""
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ratingResult"
                            }
                        }
                    }
                    },
                    "404": {
                        "statusCode": "404",
                        "description": "User not found"
                    },
                    "500": {
                        "statusCode": "500",
                        "description": "Server Errors"
                    }
                }
            }
        },
        "/users/seller":{
            "parameters": [
                {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "description": "userId you want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get Seller information",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "description": "Seller with userId",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sellerResult"
                        }
                    },
                    "404": {
                        "statusCode": "404",
                        "description": "Seller not found"
                    }
                }
            }
        }   
    },

    "definitions": {
        "loginData":{
            "type": "object",
            "properties": {
              "loginData":{
                "type": "object",
                "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
              }}
            }
        },
        "forgotPassword":{
            "type": "object",
            "properties": {              
                "email": {
                    "type": "string"
                }
              }            
        },
        "userStatus":{
            "type": "object",
            "properties": {  
                "userStatusData":{
                  "type": "object", 
                  "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "boolean"
                    }
                  } 
                }  
            }         
        },
        "newUserData":{
            "type": "object",
            "properties": {
              "newUserData":{
                "type": "object",
                "properties": {
                  "email": {
                      "type": "string"
                  },
                  "name": {
                      "type": "string"
                  },
                  "phone": {
                      "type": "string"
                  },
                  "address":{
                    "type": "object",
                    "properties": {
                      "city": {
                          "type": "string"
                      },
                      "district": {
                          "type": "string"
                      },
                      "commune": {
                          "type": "string"
                      }
                    }
                  }
                }
              }
            }
        },
        "userDetails":{
            "type": "object",
            "properties": {
              "newUserData":{
                "type": "object",
                "properties": {
                  "email": {
                      "type": "string"
                  },
                  "name": {
                      "type": "string"
                  },
                  "phone": {
                      "type": "string"
                  },
                  "role": {
                      "type": "array",
                      "items": {
                        "type":"string"
                      }
                  },
                  "ratingAverage": {
                      "type": "number"
                  },
                  "address":{
                    "type": "object",
                    "properties": {
                      "city": {
                          "type": "string"
                      },
                      "district": {
                          "type": "string"
                      },
                      "commune": {
                          "type": "string"
                      }
                    }
                  }
                }
              }
            }
        },
        "updateUserData":{
            "type": "object",
            "properties": {
              "userData":{
                "type": "object",
                "properties": {
                  "name": {
                      "type": "string"
                  },
                  "phone": {
                      "type": "string"
                  },
                  "ratingAverage": {
                      "type": "number"
                  },
                  "address":{
                    "type": "object",
                    "properties": {
                      "city": {
                          "type": "string"
                      },
                      "district": {
                          "type": "string"
                      },
                      "commune": {
                          "type": "string"
                      }
                    }
                  }
                }
              }
            }
        },
        "changePassword":{
            "type": "object",
            "properties": {
              "changePasswordData":{
                "type": "object",
                "properties": {
                "oldPassword": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                }
              }}
            }
        },
        "userRating":{
            "type": "object",
            "properties": {
              "ratingData":{
                "type": "object",
                "properties": {
                "userId": {
                    "type": "string"
                },
                "ratingUserId": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                }
              }}
            }
        },
        "ratingResult":{
            "type": "object",
            "properties": {
              "statusCode":{
                "type": "number"
              },
              "payload": {
                "type": "number"
              } 
            }
        },
        "loginResult":{
            "type": "object",
            "properties": {
              "statusCode":{
                "type": "number"
              },
              "payload": {
                "type": "string"
              }                     
            }
        
        },
        "Users":{
            "type": "object",
            "properties": {
              "statusCode":{
                "type": "number"
              },
              "payload": {
                "type": "array",
                      "items": {
                        "$ref": "#/definitions/userDetailsResult"
                      }
              }                     
            }
        
        },
        "newUserResult":{
            "type": "object",
            "properties": {
              "statusCode":{
                "type": "number"
              },
              "payload":{
                "type": "object",
                "properties": {
                  "email": {
                      "type": "string"
                  },
                  "name": {
                      "type": "string"
                  },
                  "phone": {
                      "type": "string"
                  },
                  "address":{
                    "type": "object",
                    "properties": {
                      "city": {
                          "type": "string"
                      },
                      "district": {
                          "type": "string"
                      },
                      "commune": {
                          "type": "string"
                      }
                    }
                  },
                  "_id": {
                      "type": "string"
                  },
                  "role": {
                      "type": "array",
                      "items": {
                        "type":"string"
                      }
                  }
                }
              }
            }
        },
        "userDetailsResult":{
            "type": "object",
            "properties": {
              "statusCode":{
                "type": "number"
              },
              "payload":{
                "type": "object",
                "properties": {
                  "email": {
                      "type": "string"
                  },
                  "name": {
                      "type": "string"
                  },
                  "role": {
                      "type": "array",
                      "items": {
                        "type":"string"
                      }
                  },
                  "phone": {
                      "type": "string"
                  },
                  "address":{
                    "type": "object",
                    "properties": {
                      "city": {
                          "type": "string"
                      },
                      "district": {
                          "type": "string"
                      },
                      "commune": {
                          "type": "string"
                      }
                    }
                  },
                  "ratingAverage": {
                      "type": "number"
                  }
                }
              }
            }
        },
        "id": {
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        }
    }
}